(window.webpackJsonp=window.webpackJsonp||[]).push([[236],{"6DfF":function(n,e){n.exports='---\ntitle: React Box\uff08\u5206\u7ec4\uff09\u7ec4\u4ef6\n---\n\n# Box \u5206\u7ec4\n\n<p class="description">\u5bf9\u4e8e\u5927\u591a\u6570 CSS \u5b9e\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0cBox \u7ec4\u4ef6\u80fd\u591f\u4f5c\u4e3a\u4e00\u4e2a\u5305\u88c5\u7ec4\u4ef6\u6765\u4f7f\u7528\u3002</p>\n\n\u5728`@material-ui/system`\u4e2d\uff0c\u60a8\u53ef\u4ee5\u627e\u5230\u6240\u8ff0 Box \u7ec4\u4ef6\u5305\u7684 [\u6240\u6709\u7684\u6837\u5f0f\u529f\u80fd](/system/basics/#all-inclusive)\u3002 \u5b83\u662f\u901a\u8fc7 `@material-ui/core/styles` \u4e2d\u7684 [`styled()`](/styles/api/#styled-style-function-component) \u51fd\u6570\u6765\u521b\u5efa\u7684\u3002\n\n## \u793a\u4f8b\n\n\u67e5\u770b[\u8c03\u8272\u677f](/system/palette/)\u6837\u5f0f\u529f\u80fd\u3002\n\n## \u8986\u76d6 Material-UI \u7ec4\u4ef6\n\nBox \u7ec4\u4ef6\u80fd\u591f\u5c01\u88c5\u60a8\u7684\u7ec4\u4ef6\u3002 \u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 DOM \u5143\u7d20\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a `<div>`\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7 `\u7ec4\u4ef6` \u7684\u5c5e\u6027\u8fdb\u884c\u66f4\u6539\u3002 \u5047\u8bbe\u53cd\u4e4b\u4f60\u60f3\u4f7f\u7528\u4e00\u4e2a `<span>`\uff1a\n\n```jsx\n<Box component="span" m={1}>\n  <Button />\n</Box>\n```\n\n\u5f53\u6240\u9700\u7684\u66f4\u6539\u4e0e\u65b0\u7684 DOM \u5143\u7d20\u5206\u5f00\u65f6\u6bd4\u8f83\u6709\u6548\u3002 \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u66f4\u6539\u8fb9\u8ddd\u3002\n\n\u4f46\u662f\uff0c\u6709\u65f6\u60a8\u5fc5\u987b\u9488\u5bf9\u5230\u5e95\u5c42\u7684 DOM \u5143\u7d20\u3002 \u4f8b\u5982\uff0c\u60a8\u60f3\u8981\u66f4\u6539\u4e00\u4e2a\u6309\u94ae\u7684\u6587\u672c\u989c\u8272\u3002 Button \u7ec4\u4ef6\u5df2\u7ecf\u5b9a\u4e49\u597d\u4e86\u5b83\u81ea\u5df1\u7684\u989c\u8272\u3002 CSS \u7ee7\u627f\u4e8e\u4e8b\u65e0\u8865\u3002 \u8981\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u60a8\u6709\u4ee5\u4e0b\u4e24\u79cd\u9009\u62e9\uff1a\n\n1. \u4f7f\u7528 [`React.cloneElement()`](https://reactjs.org/docs/react-api.html#cloneelement)\n\nBox \u7ec4\u4ef6\u6709\u4e00\u4e2a `clone` \u7684\u5c5e\u6027\uff0c\u901a\u8fc7\u5b83\u60a8\u53ef\u4ee5\u4f7f\u7528 React \u514b\u9686\u5143\u7d20\u7684\u65b9\u6cd5\u3002\n\n```jsx\n<Box color="text.primary" clone>\n  <Button />\n</Box>\n```\n\n2. \u4f7f\u7528 render props\n\n\u60a8\u53ef\u4ee5\u5728 Box \u7684\u5b50\u7ec4\u4ef6\u4e2d\u4f7f\u7528 render props \u7684\u51fd\u6570\u3002 \u60a8\u53ef\u4ee5\u4e0d\u7528 `className`\u3002\n\n```jsx\n<Box color="text.primary">\n  {props => <Button {...props} />}\n</Box>\n```\n\n> \u26a0\ufe0fCSS \u7684\u4f18\u5148\u7ea7\u4f9d\u8d56\u4e8e\u5bfc\u5165\u7684\u987a\u5e8f\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u786e\u4fdd\u8986\u5199\u5305\u88c5\u7ec4\u4ef6\u7684\u6837\u5f0f\uff0c\u5219\u9700\u8981\u5728\u6700\u540e\u624d\u5bfc\u5165 Box\u3002\n\n## API\n\n```jsx\nimport Box from \'@material-ui/core/Box\';\n```\n\n| \u540d\u79f0                                                      | \u7c7b\u578b                                                                                                                | \u9ed8\u8ba4\u503c                                     | \u63cf\u8ff0                                                             |\n|:------------------------------------------------------- |:----------------------------------------------------------------------------------------------------------------- |:--------------------------------------- |:-------------------------------------------------------------- |\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">union:&nbsp;node&nbsp;&#124;<br />&nbsp;func<br /></span>                                 |                                         | Box \u6e32\u67d3\u51fd\u6570\u6216\u8005\u8fd4\u56de\u8282\u70b9\u3002                                                |\n| <span class="prop-name">clone</span>                    | <span class="prop-type">bool</span>                                                                               | <span class="prop-default">false</span> | \u5982\u679c\u8bbe\u7f6e\u4e3a `true`\uff0cbox \u5c06\u4f1a\u91cd\u590d\u5229\u7528\u5176\u5b50 DOM \u5143\u7d20\u3002 \u5b83\u5728\u5185\u90e8\u4f7f\u7528 `React.cloneElement`\u3002 |\n| <span class="prop-name">component</span>                | <span class="prop-type">union:&nbsp;string&nbsp;&#124;<br />&nbsp;func&nbsp;&#124;<br />&nbsp;object<br /></span> | <span class="prop-default">\'div\'</span> | component \u7528\u4e8e\u6839\u8282\u70b9\u3002 \u53ef\u4ee5\u662f\u4e00\u4e2a\u4f7f\u7528 DOM \u5143\u7d20\u6216\u8005\u4e00\u4e2a\u7ec4\u4ef6\u7684\u5b57\u7b26\u4e32\u3002                     |\n\n\n\u4efb\u4f55\u6240\u63d0\u4f9b\u7684\u5176\u5b83\u7684\u5c5e\u6027\u4f1a\u5728[\u6837\u5f0f\u529f\u80fd](/system/basics/#all-inclusive)\u4e2d\u4f7f\u7528\uff0c\u6216\u8005\u4f20\u9012\u5230\u6839\u5143\u7d20\u3002'},BeQK:function(n,e){n.exports='---\ntitle: React Box component\n---\n\n# Cuadro\n\n<p class="description">El componente Box sirve como una envoltura para la mayor\xeda de las necesidades CSS.</p>\n\nEl componente Box recoge [todas las funciones de estilo](/system/basics/#all-inclusive) que est\xe1n expuesta en `@material-ui/system`. Se crea usando la funci\xf3n [`styled()`](/styles/api/#styled-style-function-component) de `@material-ui/core/styles`.\n\n## Ejemplo\n\n[La funci\xf3n de estilo de la paleta](/system/palette/).\n\n## Anulaci\xf3n de componentes de material-UI\n\nEl componente Box envuelve su componente. Crea un nuevo elemento DOM, un `<div>` por defecto que se puede cambiar con la propiedad `componente`. Digamos que quiere usar un `<span>` en lugar:\n\n```jsx\n<Box component="span" m={1}>\n  <Button />\n</Box>\n```\n\nEsto funciona muy bien cuando los cambios se pueden aislar a un nuevo elemento DOM. Por ejemplo, puede cambiar el margen de esta manera.\n\nSin embargo, a veces tienes que apuntar al elemento DOM subyacente. Por ejemplo, desea cambiar el color del texto del bot\xf3n. El componente Button define su propio color. La herencia por CSS no ayuda. Para solucionar el problema, tiene dos opciones:\n\n1. Utilice [`React.cloneElement ()`](https://reactjs.org/docs/react-api.html#cloneelement)\n\nEl componente Box tiene una propiedad `clone` para permitir el uso del m\xe9todo de elemento clon de React.\n\n```jsx\n<Box color="text.primary" clone>\n  <Button />\n</Box>\n```\n\n2. Use props de render\n\nLos elementos hijo de Box aceptan una funci\xf3n props de render. Puede extraer el `className`.\n\n```jsx\n<Box color="text.primary">\n  {props => <Button {...props} />}\n</Box>\n```\n\n> \u26a0\ufe0f La especificidad de CSS se basa en el orden de importaci\xf3n. Si desea la garant\xeda de que se anular\xe1 el estilo del componente envuelto, debe importar el cuadro al final.\n\n## API\n\n```jsx\nimport Box from \'@material-ui/core/Box\';\n```\n\n| Nombre                                               | Tipo                                                                                                              | Por defecto                             | Descripci\xf3n                                                                                              |\n|:---------------------------------------------------- |:----------------------------------------------------------------------------------------------------------------- |:--------------------------------------- |:-------------------------------------------------------------------------------------------------------- |\n| <span class="prop-name required">hijos&nbsp;*</span> | <span class="prop-type">union:&nbsp;node&nbsp;&#124;<br />&nbsp;func<br /></span>                                 |                                         | Funci\xf3n de render de Box o nodo.                                                                         |\n| <span class="prop-name">clone</span>                 | <span class="prop-type">bool</span>                                                                               | <span class="prop-default">false</span> | Si `true`, el Box reciclar\xe1 su elemento DOM secundario. Est\xe1 usando `React.cloneElement` internamente.   |\n| <span class="prop-name">component</span>             | <span class="prop-type">union:&nbsp;string&nbsp;&#124;<br />&nbsp;func&nbsp;&#124;<br />&nbsp;object<br /></span> | <span class="prop-default">\'div\'</span> | El componente utilizado para el nodo ra\xedz. Ya sea un \'string\' para usar un elemento DOM o un componente. |\n\n\nCualquier otra propiedad proporcionada ser\xe1 utilizada por [las funciones de estilo](/system/basics/#all-inclusive) o se extender\xe1 al elemento ra\xedz.'},Li0C:function(n,e){n.exports='---\ntitle: React Box \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n---\n\n# Box\n\n<p class="description">Box\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001CSS\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30fc\u306e\u307b\u3068\u3093\u3069\u306e\u30cb\u30fc\u30ba\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30c3\u30d1\u30fc\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u3057\u3066\u6a5f\u80fd\u3057\u307e\u3059</p>\n\nBox\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001`@material-ui/system`\u3067\u516c\u958b\u3055\u308c\u308b[\u3059\u3079\u3066\u306e\u30b9\u30bf\u30a4\u30eb\u95a2\u6570](/system/basics/#all-inclusive) \u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3057\u307e\u3059\u3002 \u3053\u308c\u306f`@material-ui/core/styles`\u306e[`styled()`](/styles/api/#styled-style-function-component) \u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n## \u4f8b\n\n[palette](/system/palette/) style\u95a2\u6570\u3002\n\n## Material-UI components\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n\nThe Box component\u306f\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30e9\u30c3\u30d7\u3057\u307e\u3059\u3002 \u65b0\u3057\u3044DOM\u8981\u7d20\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u8981\u7d20\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067`<div>`\u3067\u3042\u308a\u3001`component` \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u7528\u3057\u3066\u5909\u66f4\u3067\u304d\u307e\u3059\u3002</code> \u4ee3\u308f\u308a\u306b `<span>` \u3092\u4f7f\u7528\u3059\u308b\u3068\n\n```jsx\n<Box component="span" m={1}>\n  <Button />\n</Box>\n```\n\n\u3053\u308c\u306f\u3001\u65b0\u3057\u3044DOM\u8981\u7d20\u306b\u5206\u96e2\u3059\u308b\u5909\u66f4\u306e\u5834\u5408\u306b\u975e\u5e38\u306b\u6709\u52b9\u3067\u3059\u3002 \u305f\u3068\u3048\u3070\u3001\u3053\u306e\u65b9\u6cd5\u3067\u4f59\u767d\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\n\u305f\u3060\u3057\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u57fa\u790e\u3068\u306a\u308bDOM\u8981\u7d20\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u305f\u3068\u3048\u3070\u3001\u30dc\u30bf\u30f3\u306e\u30c6\u30ad\u30b9\u30c8\u30ab\u30e9\u30fc\u3092\u5909\u66f4\u3059\u308b\u3068\u3057\u307e\u3059\u3002 Button\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001\u72ec\u81ea\u306e\u30ab\u30e9\u30fc\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 CSS\u7d99\u627f\u306f\u5f79\u306b\u7acb\u3061\u307e\u305b\u3093\u3002 \u3053\u306e\u554f\u984c\u3092\u56de\u907f\u3059\u308b\u306b\u306f\u3001\u6b21\u306e2\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\n1. [`React.cloneElement()`](https://reactjs.org/docs/react-api.html#cloneelement)\u3092\u4f7f\u3046\n\n\u30dc\u30c3\u30af\u30b9\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u306f\u3001React\u306e\u30af\u30ed\u30fc\u30f3\u8981\u7d20\u30e1\u30bd\u30c3\u30c9\u306e\u4f7f\u7528\u3092\u6709\u52b9\u306b\u3059\u308b`clone` \u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\n\n```jsx\n<Box color="text.primary" clone>\n  <Button />\n</Box>\n```\n\n2. Render props\u3092\u4f7f\u3046\n\n\u30dc\u30c3\u30af\u30b9\u306e\u5b50\u306f\u3001\u30ec\u30f3\u30c0\u30fc\u30d7\u30ed\u30c3\u30d7\u30b9\u6a5f\u80fd\u3092\u53d7\u3051\u5165\u308c\u307e\u3059 `className`\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```jsx\n<Box color="text.primary">\n  {props => <Button {...props} />}\n</Box>\n```\n\n> CSS\u306e\u4ed5\u69d8\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u9806\u5e8f\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002 \u30e9\u30c3\u30d7\u3055\u308c\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30b9\u30bf\u30a4\u30eb\u304c\u78ba\u5b9f\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001\u6700\u5f8c\u306b\u30dc\u30c3\u30af\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## API\n\n```jsx\nimport Box from \'@material-ui/core/Box\';\n```\n\n| Name                                                    | Type                                                                                                              | Default                                 | Description                                                    |\n|:------------------------------------------------------- |:----------------------------------------------------------------------------------------------------------------- |:--------------------------------------- |:-------------------------------------------------------------- |\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">union:&nbsp;node&nbsp;&#124;<br />&nbsp;func<br /></span>                                 |                                         | \u30dc\u30c3\u30af\u30b9\u30ec\u30f3\u30c0\u30fc\u95a2\u6570\u307e\u305f\u306f\u30ce\u30fc\u30c9\u3002                                              |\n| <span class="prop-name">clone</span>                    | <span class="prop-type">bool</span>                                                                               | <span class="prop-default">false</span> | `true`\u306e\u5834\u5408\u3001\u30dc\u30c3\u30af\u30b9\u306f\u305d\u306e\u5b50DOM\u8981\u7d20\u3092\u30ea\u30b5\u30a4\u30af\u30eb\u3057\u307e\u3059\u3002 \u5185\u90e8\u7684\u306b\u306f`React.cloneElement`\u3067\u3059\u3002 |\n| <span class="prop-name">component</span>                | <span class="prop-type">union:&nbsp;string&nbsp;&#124;<br />&nbsp;func&nbsp;&#124;<br />&nbsp;object<br /></span> | <span class="prop-default">\'div\'</span> | \u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u306b\u4f7f\u7528\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3002 DOM\u8981\u7d20\u307e\u305f\u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u6587\u5b57\u5217\u3002                  |\n\n\n\u6307\u5b9a\u3057\u305f\u305d\u306e\u4ed6\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001 [the style functions](/system/basics/#all-inclusive)\u3067\u4f7f\u7528\u3055\u308c\u308b\u304b\u3001\u30eb\u30fc\u30c8\u8981\u7d20\u306b\u5c55\u958b\u3055\u308c\u307e\u3059\u3002'},RTbm:function(n,e,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/box",function(){return o("Xggp")}])},"SB/C":function(n,e){n.exports='---\ntitle: Composant React Box\n---\n\n# Box (Boite)\n\n<p class="description">Le composant Box sert de composant de wrapper pour la plupart des besoins de l\'utilitaire CSS.</p>\n\nLe composant Box contiens [toutes les fonctions de style](/system/basics/#all-inclusive) qui sont expos\xe9es dans `@material-ui/system`. Il est cr\xe9\xe9 en utilisant la fonction [`styled()`](/styles/api/#styled-style-function-component) de `@material-ui/core/styles`.\n\n## Exemple\n\n[La palette](/system/palette/) de style fonction.\n\n## Remplacer les composants Material-UI\n\nLe composant Box enveloppe votre composant. Il cr\xe9e un nouvel \xe9l\xe9ment DOM, un \xe9l\xe9ment `<div>` par d\xe9faut qui peut \xeatre modifi\xe9 avec la propri\xe9t\xe9 du composant ``. Disons que vous voulez utiliser un `<span>` \xe0 la place :\n\n```jsx\n<Box component="span" m={1}>\n  <Button />\n</Box>\n```\n\nCela fonctionne tr\xe8s bien quand les changements peuvent \xeatre isol\xe9s dans un nouvel \xe9l\xe9ment DOM. Par exemple, vous pouvez changer la marge de cette fa\xe7on.\n\nCependant, vous devez parfois cibler l\'\xe9l\xe9ment DOM sous-jacent. Par exemple, vous voulez changer la couleur du texte du bouton. Le composant Bouton d\xe9finit sa propre couleur. L\'h\xe9ritage CSS n\'aide pas. Pour contourner le probl\xe8me, vous avez deux options :\n\n1. Utilisez [`React.cloneElement()`](https://reactjs.org/docs/react-api.html#cloneelement)\n\nLa composante Box a une propri\xe9t\xe9 `cloner` pour activer l\'utilisation de l\'\xe9l\xe9ment de clone m\xe9thode de React.\n\n```jsx\n<Box color="text.primary" clone>\n  <Button />\n</Box>\n```\n\n2. Utiliser les props de rendu\n\nLes enfants de la bo\xeete acceptent une fonction de rendu des props. Vous pouvez retirer le `className`.\n\n```jsx\n<Box color="text.primary">\n  {props => <Button {...props} />}\n</Box>\n```\n\n> \u26a0 La sp\xe9cificit\xe9 CSS d\xe9pend de l\'ordre d\'importation. Si vous voulez la garantie que le style du composant envelopp\xe9 sera surcharg\xe9, vous devez importer le Box en dernier.\n\n## API\n\n```jsx\nimport Box from \'@material-ui/core/Box\';\n```\n\n| Nom                                                     | Type                                                                                                              | D\xe9faut                                  | Description                                                                                                            |\n|:------------------------------------------------------- |:----------------------------------------------------------------------------------------------------------------- |:--------------------------------------- |:---------------------------------------------------------------------------------------------------------------------- |\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">union:&nbsp;node&nbsp;&#124;<br />&nbsp;func<br /></span>                                 |                                         | Fonction de rendu ou noeud de la bo\xeete.                                                                                |\n| <span class="prop-name">clone</span>                    | <span class="prop-type">bool</span>                                                                               | <span class="prop-default">false</span> | Si `true`, la bo\xeete recycle son \xe9l\xe9ment DOM enfant. Il utilise `React.cloneElement` en interne.                        |\n| <span class="prop-name">component</span>                | <span class="prop-type">union:&nbsp;string&nbsp;&#124;<br />&nbsp;func&nbsp;&#124;<br />&nbsp;object<br /></span> | <span class="prop-default">\'div\'</span> | Le composant utilis\xe9 pour le noeud racine. Soit une cha\xeene de caract\xe8res pour utiliser un \xe9l\xe9ment DOM ou un composant. |\n\n\nToute autre propri\xe9t\xe9 fournie sera utilis\xe9e par [les fonctions de style](/system/basics/#all-inclusive) ou \xe9tendue \xe0 l\'\xe9l\xe9ment racine.'},VH3m:function(n,e,o){var s={"./box-de.md":"xmYp","./box-es.md":"BeQK","./box-fr.md":"SB/C","./box-ja.md":"Li0C","./box-pt.md":"zEgm","./box-ru.md":"YM3W","./box-zh.md":"6DfF","./box.md":"ZPkX"};function t(n){var e=a(n);return o(e)}function a(n){if(!o.o(s,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return s[n]}t.keys=function(){return Object.keys(s)},t.resolve=a,n.exports=t,t.id="VH3m"},Xggp:function(n,e,o){"use strict";o.r(e),o.d(e,"default",(function(){return c}));var s=o("mXGw"),t=o.n(s),a=o("e+1t"),p=o("kVtE"),r=t.a.createElement,l=o("Z270"),i=o("VH3m");function c(n){var e=n.demos,o=n.docs;return r(a.a,{demos:e,docs:o,requireDemo:l})}c.getInitialProps=function(){var n=Object(p.a)({pageFilename:"components/box",requireRaw:i});return{demos:n.demos,docs:n.docs}}},YM3W:function(n,e){n.exports='---\ntitle: \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 React Box\n---\n\n# Box\n\n<p class="description">Box \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u043e\u0431\u0435\u0440\u0442\u043a\u0430 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430 \u0434\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 CSS \u0441\u0432\u043e\u0439\u0441\u0442\u0432.</p>\n\nThe Box component packages [all the style functions](/system/basics/#all-inclusive) that are exposed in `@material-ui/system`. It\'s created using the [`styled()`](/styles/api/#styled-style-function-component) function of `@material-ui/core/styles`.\n\n## \u041f\u0440\u0438\u043c\u0435\u0440\n\n[The palette](/system/palette/) style function.\n\n## \u041f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 Material-UI \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432\n\nBox \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u043e\u0431\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u0430\u0448 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442. \u041e\u043d \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 DOM \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u044d\u0442\u043e `<div>` \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0445\u043e\u0442\u044f \u044d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e\u043c `component`. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0435\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c`<span>` \u0432\u0437\u0430\u043c\u0435\u043d:\n\n```jsx\n<Box component="span" m={1}>\n  <Button />\n</Box>\n```\n\n\u042d\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u043d\u043e \u043a\u043e\u0433\u0434\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u0437\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u043d\u043e\u0432\u044b\u0439 DOM \u044d\u043b\u0435\u043c\u0435\u043d\u0442. \u0414\u043b\u044f \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c margin(\u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043e\u0442\u0441\u0442\u0443\u043f) \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c.\n\n\u0422\u0435\u043c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435, \u0438\u043d\u043e\u0433\u0434\u0430 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 DOM. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0446\u0432\u0435\u0442 \u0442\u0435\u043a\u0441\u0442\u0430 \u043a\u043d\u043e\u043f\u043a\u0438. \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 Button \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0432\u043e\u0439 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0446\u0432\u0435\u0442. \u041d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 CSS \u043d\u0435 \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442. \u0427\u0442\u043e\u0431\u044b \u043e\u0431\u043e\u0439\u0442\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443, \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0434\u0432\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430:\n\n1. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c [`React.cloneElement()`](https://reactjs.org/docs/react-api.html#cloneelement)\n\n\u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 Box \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `clone`, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 clone element \u0438\u0437 React.\n\n```jsx\n<Box color="text.primary" clone>\n  <Button />\n</Box>\n```\n\n2. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 render \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\nThe Box children accepts a render props function. You can pull out the `className`.\n\n```jsx\n<Box color="text.primary">\n  {props => <Button\xa0{...props} />}\n</Box>\n```\n\n> \u26a0\ufe0f The CSS specificity relies on the import order. If you want the guarantee that the wrapped component\'s style will be overridden, you need to import the Box last.\n\n## API\n\n```jsx\nimport Box from \'@material-ui/core/Box\';\n```\n\n| \u0418\u043c\u044f                                                     | \u0422\u0438\u043f                                                                                                               | \u041f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e                            | \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435                                                                                              |\n|:------------------------------------------------------- |:----------------------------------------------------------------------------------------------------------------- |:--------------------------------------- |:----------------------------------------------------------------------------------------------------- |\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">union:&nbsp;node&nbsp;&#124;<br />&nbsp;func<br /></span>                                 |                                         | Box render function or node.                                                                          |\n| <span class="prop-name">clone</span>                    | <span class="prop-type">bool</span>                                                                               | <span class="prop-default">false</span> | If `true`, the box will recycle its children DOM element. It\'s using `React.cloneElement` internally. |\n| <span class="prop-name">component</span>                | <span class="prop-type">union:&nbsp;string&nbsp;&#124;<br />&nbsp;func&nbsp;&#124;<br />&nbsp;object<br /></span> | <span class="prop-default">\'div\'</span> | The component used for the root node. Either a string to use a DOM element or a component.            |\n\n\nAny other properties supplied will be used by [the style functions](/system/basics/#all-inclusive) or spread to the root element.'},Z270:function(n,e){function o(n){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}o.keys=function(){return[]},o.resolve=o,n.exports=o,o.id="Z270"},ZPkX:function(n,e){n.exports='---\ntitle: React Box component\n---\n\n# Box\n\n<p class="description">The Box component serves as a wrapper component for most of the CSS utility needs.</p>\n\nThe Box component packages [all the style functions](/system/basics/#all-inclusive) that are exposed in `@material-ui/system`.\nIt\'s created using the [`styled()`](/styles/api/#styled-style-function-component) function of `@material-ui/core/styles`.\n\n## Example\n\n[The palette](/system/palette/) style function.\n\n## Overriding Material-UI components\n\nThe Box component wraps your component.\nIt creates a new DOM element, a `<div>` by default that can be changed with the `component` property.\nLet\'s say you want to use a `<span>` instead:\n\n```jsx\n<Box component="span" m={1}>\n  <Button />\n</Box>\n```\n\nThis works great when the changes can be isolated to a new DOM element.\nFor instance, you can change the margin this way.\n\nHowever, sometimes you have to target the underlying DOM element.\nFor instance, you want to change the text color of the button.\nThe Button component defines its own color. CSS inheritance doesn\'t help.\nTo workaround the problem, you have two options:\n\n1. Use [`React.cloneElement()`](https://reactjs.org/docs/react-api.html#cloneelement)\n\nThe Box component has a `clone` property to enable the usage of the clone element method of React.\n\n```jsx\n<Box color="text.primary" clone>\n  <Button />\n</Box>\n```\n\n2. Use render props\n\nThe Box children accepts a render props function. You can pull out the `className`.\n\n```jsx\n<Box color="text.primary">\n  {props => <Button {...props} />}\n</Box>\n```\n\n> \u26a0\ufe0f The CSS specificity relies on the import order.\nIf you want the guarantee that the wrapped component\'s style will be overridden, you need to import the Box last.\n\n## API\n\n```jsx\nimport Box from \'@material-ui/core/Box\';\n```\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">union:&nbsp;node&nbsp;&#124;<br>&nbsp;func<br></span> | | Box render function or node. |\n| <span class="prop-name">clone</span> | <span class="prop-type">bool</span> | <span class="prop-default">false</span> | If `true`, the box will recycle its children DOM element. It\'s using `React.cloneElement` internally. |\n| <span class="prop-name">component</span> | <span class="prop-type">union:&nbsp;string&nbsp;&#124;<br>&nbsp;func&nbsp;&#124;<br>&nbsp;object<br></span> | <span class="prop-default">\'div\'</span> | The component used for the root node. Either a string to use a DOM element or a component. |\n\nAny other properties supplied will be used by [the style functions](/system/basics/#all-inclusive) or spread to the root element.\n'},xmYp:function(n,e){n.exports='---\ntitle: React Box component\n---\n\n# Box\n\n<p class="description">Die Box-Komponente dient als Wrapper-Komponente f\xfcr die meisten Anforderungen des CSS-Dienstprogramms.</p>\n\nDie Box-Komponente kombiniert [alle Stilfunktionen](/system/basics/#all-inclusive), die in `@material-ui/system` verf\xfcgbar sind. Es wird mit der [`styled()`](/styles/api/#styled-style-function-component) function aus `@material-ui/core/styles` erstellt.\n\n## Beispiel\n\nDie Style-Funktion der [Palette](/system/palette/).\n\n## Material-UI-Komponenten \xfcberschreiben\n\nDie Box-Komponente umschlie\xdft Ihre Komponente. Es erstellt ein neues DOM-Element, welches &ndash; sofern nicht anders im `component`-Attribut angegeben &ndash; ein `<div>`-Element ist. Angenommen, stattdessen soll ein `<span>`-Element verwendet werden:\n\n```jsx\n<Box component="span" m={1}>\n  <Button />\n</Box>\n```\n\nDies funktioniert hervorragend, wenn die \xc4nderungen f\xfcr ein neues DOM-Element isoliert werden k\xf6nnen. Zum Beispiel kann der Rand auf diese Weise ver\xe4ndert werden.\n\nManchmal m\xfcssen Sie jedoch das zugrunde liegende DOM-Element als Ziel festlegen. Sie m\xf6chten beispielsweise die Textfarbe des Buttons \xe4ndern. Die Button-Komponente definiert ihre eigene Farbe. CSS-Vererbung hilft hier nicht. Um das Problem zu umgehen, haben Sie zwei M\xf6glichkeiten:\n\n1. Verwenden Sie [`React.cloneElement()`](https://reactjs.org/docs/react-api.html#cloneelement)\n\nDie Box-Komponente verf\xfcgt \xfcber eine `clone`-Eigenschaft, um die Verwendung der Klonelementmethode von React zu erm\xf6glichen.\n\n```jsx\n<Box color="text.primary" clone>\n  <Button />\n</Box>\n```\n\n2. Verwenden Sie Render Eigenschaften\n\nDie Box-Kinder akzeptieren eine Render-Funktion als Eigenschaft. Sie k\xf6nnen den `className` herausziehen.\n\n```jsx\n<Box color="text.primary">\n  {props => <Button {...props} />}\n</Box>\n```\n\n> \u26a0\ufe0f Die CSS-Spezifit\xe4t h\xe4ngt von der Importreihenfolge ab. Wenn Sie garantieren wollen, dass der Stil der wrapped Komponente \xfcberschrieben wird, m\xfcssen Sie die Box zuletzt importieren.\n\n## API\n\n```jsx\nimport Box from \'@material-ui/core/Box\';\n```\n\n| Name                                                    | Typ                                                                                                               | Standard                                | Beschreibung                                                                                                               |\n|:------------------------------------------------------- |:----------------------------------------------------------------------------------------------------------------- |:--------------------------------------- |:-------------------------------------------------------------------------------------------------------------------------- |\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">union:&nbsp;node&nbsp;&#124;<br />&nbsp;func<br /></span>                                 |                                         | Box Render-Funktion oder Knoten.                                                                                           |\n| <span class="prop-name">clone</span>                    | <span class="prop-type">bool</span>                                                                               | <span class="prop-default">false</span> | Wenn `true`, werden die untergeordnete DOM-Elemente der Box recycelt. Es verwendet intern `React.cloneElement`.            |\n| <span class="prop-name">component</span>                | <span class="prop-type">union:&nbsp;string&nbsp;&#124;<br />&nbsp;func&nbsp;&#124;<br />&nbsp;object<br /></span> | <span class="prop-default">\'div\'</span> | Die f\xfcr den Wurzelknoten verwendete Komponente. Entweder ein String, um ein DOM-Element zu verwenden oder eine Komponente. |\n\n\nAlle anderen angegebenen Eigenschaften werden von [der Stilfunktionen](/system/basics/#all-inclusive) benutzt oder auf das Wurzelelement verteilt.'},zEgm:function(n,e){n.exports='---\ntitle: Componente React Box\n---\n\n# Box\n\n<p class="description">O componente Box serve como um componente encapsulador (wrapper) para a auxiliar na maioria das necessidades de uso com CSS.</p>\n\nO component Box comp\xf5e [todas as fun\xe7\xf5es de estilo](/system/basics/#all-inclusive) que s\xe3o expostas no `@material-ui/system`. Ele \xe9 criado usando a fun\xe7\xe3o [`styled()`](/styles/api/#styled-style-function-component) de `@material-ui/core/styles`.\n\n## Exemplo\n\n[A paleta](/system/palette/) com fun\xe7\xf5es de estilo.\n\n## Sobrescrevendo componentes do Material-UI\n\nO componente Box envolve seu componente. Ele cria um novo elemento DOM, uma `<div>` por padr\xe3o, comportamento que pode ser modificado atrav\xe9s da propriedade `component`. Digamos que voc\xea queira usar um `<span>`:\n\n```jsx\n<Box component="span" m={1}>\n  <Button />\n</Box>\n```\n\nIsso funciona muito bem quando as altera\xe7\xf5es precisam ser isoladas em um novo elemento DOM. Note no exemplo, a forma que voc\xea alterou a margem.\n\nNo entanto, \xe0s vezes, voc\xea precisa modificar o elemento DOM subjacente. Por exemplo, voc\xea deseja alterar a cor do texto do bot\xe3o. O componente `Button`, por sua vez, define sua pr\xf3pria cor. A heran\xe7a por CSS n\xe3o ir\xe1 ajudar nesse caso. Para contornar o problema, voc\xea tem duas op\xe7\xf5es:\n\n1. Usar [`React.cloneElement()`](https://pt-br.reactjs.org/docs/react-api.html#cloneelement)\n\nO componente Box tem uma propriedade `clone` para permitir o uso do m\xe9todo de clonar elemento do React.\n\n```jsx\n<Box color="text.primary" clone>\n  <Button />\n</Box>\n```\n\n2. Use a fun\xe7\xe3o de renderiza\xe7\xe3o com propriedades\n\nOs elementos filhos de Box aceitam uma fun\xe7\xe3o de renderiza\xe7\xe3o com propriedades. Voc\xea pode ent\xe3o extrair o `className`.\n\n```jsx\n<Box color="text.primary">\n  {props => <Button {...props} />}\n</Box>\n```\n\n> \u26a0\ufe0f A especificidade do CSS depende da ordem de importa\xe7\xe3o. Se voc\xea quer garantir que o estilo do componente encapsulado seja substitu\xeddo, voc\xea precisa importar o Box por \xfaltimo.\n\n## API\n\n```jsx\nimport Box from \'@material-ui/core/Box\';\n```\n\n| Nome                                                    | Tipo                                                                                                              | Padr\xe3o                                  | Descri\xe7\xe3o                                                                                            |\n|:------------------------------------------------------- |:----------------------------------------------------------------------------------------------------------------- |:--------------------------------------- |:---------------------------------------------------------------------------------------------------- |\n| <span class="prop-name required">children&nbsp;*</span> | <span class="prop-type">union:&nbsp;node&nbsp;&#124;<br />&nbsp;func<br /></span>                                 |                                         | Fun\xe7\xe3o de renderiza\xe7\xe3o do Box ou n\xf3.                                                                 |\n| <span class="prop-name">clone</span>                    | <span class="prop-type">bool</span>                                                                               | <span class="prop-default">false</span> | Se `true`, o box ir\xe1 recriar seu elemento DOM filho. Ele ir\xe1 usar `React.cloneElement` internamente. |\n| <span class="prop-name">component</span>                | <span class="prop-type">union:&nbsp;string&nbsp;&#124;<br />&nbsp;func&nbsp;&#124;<br />&nbsp;object<br /></span> | <span class="prop-default">\'div\'</span> | O componente usado como n\xf3 raiz. Ou uma string para usar um elemento DOM ou componente.              |\n\n\nQuaisquer outras propriedades fornecidas ser\xe3o usadas por [fun\xe7\xf5es de estilo](/system/basics/#all-inclusive) ou propagadas para o elemento raiz.'}},[["RTbm",0,2,1,3,5,4,6,7,8,9,10,11,12,15,14,13,16,17,18]]]);